/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.alibaba.dts.formats.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class category extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3797762445390434022L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"category\",\"namespace\":\"com.alibaba.dts.formats.avro\",\"fields\":[{\"name\":\"Id\",\"type\":\"int\"},{\"name\":\"MessageBodyId\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<category> ENCODER =
      new BinaryMessageEncoder<category>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<category> DECODER =
      new BinaryMessageDecoder<category>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<category> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<category> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<category>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this category to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a category from a ByteBuffer. */
  public static category fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public int Id;
  @Deprecated public java.lang.CharSequence MessageBodyId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public category() {}

  /**
   * All-args constructor.
   * @param Id The new value for Id
   * @param MessageBodyId The new value for MessageBodyId
   */
  public category(java.lang.Integer Id, java.lang.CharSequence MessageBodyId) {
    this.Id = Id;
    this.MessageBodyId = MessageBodyId;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return Id;
    case 1: return MessageBodyId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: Id = (java.lang.Integer)value$; break;
    case 1: MessageBodyId = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'Id' field.
   * @return The value of the 'Id' field.
   */
  public java.lang.Integer getId() {
    return Id;
  }

  /**
   * Sets the value of the 'Id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Integer value) {
    this.Id = value;
  }

  /**
   * Gets the value of the 'MessageBodyId' field.
   * @return The value of the 'MessageBodyId' field.
   */
  public java.lang.CharSequence getMessageBodyId() {
    return MessageBodyId;
  }

  /**
   * Sets the value of the 'MessageBodyId' field.
   * @param value the value to set.
   */
  public void setMessageBodyId(java.lang.CharSequence value) {
    this.MessageBodyId = value;
  }

  /**
   * Creates a new category RecordBuilder.
   * @return A new category RecordBuilder
   */
  public static com.alibaba.dts.formats.avro.category.Builder newBuilder() {
    return new com.alibaba.dts.formats.avro.category.Builder();
  }

  /**
   * Creates a new category RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new category RecordBuilder
   */
  public static com.alibaba.dts.formats.avro.category.Builder newBuilder(com.alibaba.dts.formats.avro.category.Builder other) {
    return new com.alibaba.dts.formats.avro.category.Builder(other);
  }

  /**
   * Creates a new category RecordBuilder by copying an existing category instance.
   * @param other The existing instance to copy.
   * @return A new category RecordBuilder
   */
  public static com.alibaba.dts.formats.avro.category.Builder newBuilder(com.alibaba.dts.formats.avro.category other) {
    return new com.alibaba.dts.formats.avro.category.Builder(other);
  }

  /**
   * RecordBuilder for category instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<category>
    implements org.apache.avro.data.RecordBuilder<category> {

    private int Id;
    private java.lang.CharSequence MessageBodyId;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.alibaba.dts.formats.avro.category.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.Id)) {
        this.Id = data().deepCopy(fields()[0].schema(), other.Id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.MessageBodyId)) {
        this.MessageBodyId = data().deepCopy(fields()[1].schema(), other.MessageBodyId);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing category instance
     * @param other The existing instance to copy.
     */
    private Builder(com.alibaba.dts.formats.avro.category other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.Id)) {
        this.Id = data().deepCopy(fields()[0].schema(), other.Id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.MessageBodyId)) {
        this.MessageBodyId = data().deepCopy(fields()[1].schema(), other.MessageBodyId);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'Id' field.
      * @return The value.
      */
    public java.lang.Integer getId() {
      return Id;
    }

    /**
      * Sets the value of the 'Id' field.
      * @param value The value of 'Id'.
      * @return This builder.
      */
    public com.alibaba.dts.formats.avro.category.Builder setId(int value) {
      validate(fields()[0], value);
      this.Id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'Id' field has been set.
      * @return True if the 'Id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'Id' field.
      * @return This builder.
      */
    public com.alibaba.dts.formats.avro.category.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'MessageBodyId' field.
      * @return The value.
      */
    public java.lang.CharSequence getMessageBodyId() {
      return MessageBodyId;
    }

    /**
      * Sets the value of the 'MessageBodyId' field.
      * @param value The value of 'MessageBodyId'.
      * @return This builder.
      */
    public com.alibaba.dts.formats.avro.category.Builder setMessageBodyId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.MessageBodyId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'MessageBodyId' field has been set.
      * @return True if the 'MessageBodyId' field has been set, false otherwise.
      */
    public boolean hasMessageBodyId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'MessageBodyId' field.
      * @return This builder.
      */
    public com.alibaba.dts.formats.avro.category.Builder clearMessageBodyId() {
      MessageBodyId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public category build() {
      try {
        category record = new category();
        record.Id = fieldSetFlags()[0] ? this.Id : (java.lang.Integer) defaultValue(fields()[0]);
        record.MessageBodyId = fieldSetFlags()[1] ? this.MessageBodyId : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<category>
    WRITER$ = (org.apache.avro.io.DatumWriter<category>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<category>
    READER$ = (org.apache.avro.io.DatumReader<category>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
